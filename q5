#include <iostream>
#include <string>
using namespace std;

class Media {
protected:
    string title;
    string publicationDate;
    string uniqueID;
    string publisher;
    bool isCheckedOut;
public:
    Media(string title = "", string pubDate = "", string id = "", string pub = "")
        : title(title), publicationDate(pubDate), uniqueID(id), publisher(pub), isCheckedOut(false) {}
    virtual void displayInfo() {
        cout << "Title: " << title << "\nPublication Date: " << publicationDate
             << "\nID: " << uniqueID << "\nPublisher: " << publisher
             << "\nStatus: " << (isCheckedOut ? "Checked Out" : "Available") << endl;
    }
    void checkOut() {
        if (!isCheckedOut) {
            isCheckedOut = true;
            cout << title << " has been checked out.\n";
        } else {
            cout << title << " is already checked out.\n";
        }
    }
    void returnItem() {
        if (isCheckedOut) {
            isCheckedOut = false;
            cout << title << " has been returned.\n";
        } else {
            cout << title << " was not checked out.\n";
        }
    }
    string getTitle() { return title; }
    string getPublicationDate() { return publicationDate; }
    virtual ~Media() {}
};

class Book : public Media {
private:
    string author;
    string ISBN;
    int numberOfPages;
public:
    Book(string title, string pubDate, string id, string pub, string author, string isbn, int pages)
        : Media(title, pubDate, id, pub), author(author), ISBN(isbn), numberOfPages(pages) {}
    void displayInfo() override {
        Media::displayInfo();
        cout << "Author: " << author << "\nISBN: " << ISBN << "\nPages: " << numberOfPages << endl;
    }
    string getAuthor() { return author; }
};

class DVD : public Media {
private:
    string director;
    string duration;
    string rating;
public:
    DVD(string title, string pubDate, string id, string pub, string director, string duration, string rating)
        : Media(title, pubDate, id, pub), director(director), duration(duration), rating(rating) {}
    void displayInfo() override {
        Media::displayInfo();
        cout << "Director: " << director << "\nDuration: " << duration << "\nRating: " << rating << endl;
    }
};

class CD : public Media {
private:
    string artist;
    int numberOfTracks;
    string genre;
public:
    CD(string title, string pubDate, string id, string pub, string artist, int tracks, string genre)
        : Media(title, pubDate, id, pub), artist(artist), numberOfTracks(tracks), genre(genre) {}
    void displayInfo() override {
        Media::displayInfo();
        cout << "Artist: " << artist << "\nTracks: " << numberOfTracks << "\nGenre: " << genre << endl;
    }
};

class Magazine : public Media {
private:
    string issue;
    string editor;
public:
    Magazine(string title, string pubDate, string id, string pub, string issue, string editor)
        : Media(title, pubDate, id, pub), issue(issue), editor(editor) {}
    void displayInfo() override {
        Media::displayInfo();
        cout << "Issue: " << issue << "\nEditor: " << editor << endl;
    }
};

void searchByTitle(Media* library[], int size, string title) {
    cout << "\nSearching by title: " << title << endl;
    for (int i = 0; i < size; ++i) {
        if (library[i]->getTitle() == title) {
            library[i]->displayInfo();
        }
    }
}

void searchByYear(Media* library[], int size, string year) {
    cout << "\nSearching by publication year: " << year << endl;
    for (int i = 0; i < size; ++i) {
        if (library[i]->getPublicationDate() == year) {
            library[i]->displayInfo();
        }
    }
}
int main() {
    Book b1("The Great Gatsby", "1925", "B100", "Scribner", "F. Scott Fitzgerald", "9780743273565", 180);
    DVD d1("Inception", "2010", "D200", "Warner Bros", "Christopher Nolan", "2h 28m", "PG-13");
    CD c1("Thriller", "1982", "C300", "Epic", "Michael Jackson", 9, "Pop");
    Magazine m1("National Geographic", "2023", "M400", "NatGeo", "April 2023", "Susan Goldberg");
    Media* library[4] = { &b1, &d1, &c1, &m1 };
    cout << "LIBRARY ITEMS\n";
    for (int i = 0; i < 4; ++i) {
        library[i]->displayInfo();
    }
    b1.checkOut();
    b1.returnItem();
    searchByTitle(library, 4, "Inception");
    searchByYear(library, 4, "1925");
    return 0;
}
